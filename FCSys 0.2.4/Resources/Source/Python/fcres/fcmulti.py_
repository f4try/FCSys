#!/usr/bin/python
# -*- coding: utf-8 -*-
"""Functions to load and plot data from multiple simulation and linearization
files at once

.. _Modelica: http://www.modelica.org/
"""
__author__ = "Kevin Davies"
__email__ = "kdavies4@gmail.com"
__credits__ = ["Kevin Bandy"]
__copyright__ = "Copyright 2012-2013, Georgia Tech Research Corporation"
__license__ = "BSD-compatible (see LICENSE.txt)"


import os
import numpy as np

from glob import glob
from matplotlib.cbook import iterable
from itertools import cycle

from modelicares.linres import LinRes
from modelicares.base import figure, add_hlines, add_vlines
from modelicares.multi import multiplot, multibode, multinyquist

from fcsimres import FCSimRes


def multiload(locations='*'):
    """Load multiple FCSys_ cell simulation and/or linearization results.

    **Arguments:**

    - *locations*: Input filename, directory, or list of these

         Wildcards ('*') may be used in the path(s).

    **Returns:**

    1. List of cell simulations (:class:`fcsimres.FCSimRes` instances)

    2. List of linearizations (:class:`modelicares.linres.LinRes` instances)

    Either may be an empty list.

    **Example:**

    .. code-block:: python

       >>> from modelicares import *

       # By file:
       >>> multiload(['examples/ChuaCircuit.mat', 'examples/PID/*/*.mat']) # doctest: +ELLIPSIS
       Valid: SimRes('.../examples/ChuaCircuit.mat')
       Valid: LinRes('.../examples/PID/1/dslin.mat')
       Valid: LinRes('.../examples/PID/2/dslin.mat')
       ([SimRes('.../examples/ChuaCircuit.mat')], [LinRes('.../examples/PID/1/dslin.mat'), LinRes('.../examples/PID/2/dslin.mat')])


       # By directory:
       >>> multiload('examples') # doctest: +ELLIPSIS
       Valid: FCSimRes('...ChuaCircuit.mat')
       Valid: LinRes('...PID.mat')...
       Valid: FCSimRes('...ThreeTanks.mat')
       ([FCSimRes('...ChuaCircuit.mat'), FCSimRes('...ThreeTanks.mat')], [LinRes('...PID.mat')])
    """

    # Make a list of files.
    fnames = []
    if isinstance(locations, basestring):
        locations = [locations]
    for location in locations:
        if os.path.isdir(location):
            fnames += glob(os.path.join(location, '*.mat'))
        else:
            if '*' in location:
                fnames += glob(location)
            else:
                fnames.append(location)

    # Load the files.
    sims = [] # Simulation results
    lins = [] # Linearization results
    for fname in fnames:
        try:
            sims.append(FCSimRes(fname))
            print("Valid: " + sims[-1].__repr__())
        except:
            try:
                lins.append(LinRes(fname))
                print("Valid: " + lins[-1].__repr__())
            except:
                print("Could not load cell simulation or linearization data "
                      "from '%s'." % fname)
    return sims, lins


def multiplot_property(sims):
    """Plot a property across a list of simulations.

    **Arguments:**

    - *sims*: List of simulations
    """
    # TODO: Get this working.
    fig = plt.figure()
    #plt.setp(fig, 'label', fname)
    ax = fig.add_subplot(111)
    for sim in sims:
        sim.plotfig_subregions(ax=ax, prefix=True)
        #xy(title=title, fname=fname,
        #   ynames1=presuffix(self.storage_names,
        #                      suffix='.H2OCond.H2OlProps.T'),
        #   ylabel1="Temperature", legends1=self.storage_names, ax="1")
        #show()

if __name__ == '__main__':
    """Test the contents of this file."""
    import doctest
    doctest.testmod()
    exit()
